{"version":3,"file":"router.umd.js","sources":["../src/index.js"],"sourcesContent":["/**\n * Helper to trim start/end slash\n * @param {String} path \n */\nconst clearSlashes = path =>\n  path\n    .replace(/\\/$/, '')\n    .replace(/^\\//, '')\n\n/**\n * Helper to get pathname from url\n */\nconst getFragment = () => {\n  let fragment = '';\n  const match = window.location.href.match(/#!(.*)$/)\n  fragment = match ? match[1] : ''\n  return clearSlashes(fragment)\n}\n\nclass Router {\n  \n  __routes = []\n  __preloader = null\n  __parentNode = null\n  __render = null\n  \n  /**\n   * Router instance\n   * @param {{ mount, render, preloader? }} config - Configuration\n   */\n  constructor (config) {\n    if (!config.mount) throw Error('[Router] \"mount\" point is missing')\n    if (!config.render) throw Error('[Router] \"render\" func is missing')\n    this.__parentNode = document.querySelector(config.mount)\n    this.__render = config.render\n    if (config.preloader) this.__preloader = config.preloader\n    window.addEventListener('popstate', () => this.listen());\n  }\n\n  /**\n   * Add route\n   * @param {String} path - URL Path\n   * @param {{ view: Function, state?: Object }} component - Routed component\n   */\n  add = (path, component) => {\n    path = path === '/' ? '^\\/?$' : new RegExp(clearSlashes(path) + '$')\n    this.__routes.push({ path, component })    \n  }\n\n  /**\n   * Render router component\n   * @param {{ view: Function, state?: Object }} component - Routed component\n   * @param {Array} params - URL Params\n   */\n  __mount = (component, params) => {\n    // Extract from routed component\n    const view = () => component(params)\n    \n    // Dynamic / async componoent\n    if (typeof view().then === 'function') {\n      \n      // Render preloader if exists\n      if (this.__preloader) {\n        this.__render(this.__parentNode, this.__preloader)\n      }\n      \n      view().then(resp => {\n        this.__render(this.__parentNode, resp.default)\n      })\n\n    } else {\n\n      this.__render(this.__parentNode, view)\n\n    }\n  }\n\n  /**\n   * Handle mount on route changes\n   */\n  listen = () => {\n    const current = getFragment()\n    this.__routes.some(({ path, component }) => {\n      const match = current.match(path)\n      if (match) {\n        match.shift()\n        this.__mount(component, match)\n        return match;\n      }\n      return false\n    })\n  }\n}\n\nexport default Router\n"],"names":["clearSlashes","path","replace","config","__routes","__preloader","__parentNode","__render","add","component","RegExp","_this","push","__mount","params","view","then","resp","listen","match","current","window","location","href","some","shift","mount","Error","render","this","document","querySelector","preloader","addEventListener"],"mappings":"+KAIA,IAAMA,EAAe,SAAAC,UACnBA,EACGC,QAAQ,MAAO,IACfA,QAAQ,MAAO,YAuBlB,SAAaC,cACX,QAVFC,EAAW,QACXC,EAAc,UACdC,EAAe,UACfC,EAAW,UAoBXC,IAAM,SAACP,EAAMQ,GACXR,EAAgB,MAATA,EAAe,OAAU,IAAIS,OAAOV,EAAaC,GAAQ,KAChEU,EAAKP,EAASQ,KAAK,CAAEX,KAAAA,EAAMQ,UAAAA,UAQ7BI,EAAU,SAACJ,EAAWK,GAEpB,IAAMC,EAAO,kBAAMN,EAAUK,IAGF,mBAAhBC,IAAOC,MAGZL,EAAKN,GACPM,EAAKJ,EAASI,EAAKL,EAAcK,EAAKN,GAGxCU,IAAOC,KAAK,SAAAC,GACVN,EAAKJ,EAASI,EAAKL,EAAcW,cAKnCN,EAAKJ,EAASI,EAAKL,EAAcS,SAQrCG,OAAS,WACP,IAnEIC,EAmEEC,GAnEFD,EAAQE,OAAOC,SAASC,KAAKJ,MAAM,WAElCnB,EADImB,EAAQA,EAAM,GAAK,KAmE5BR,EAAKP,EAASoB,KAAK,gBAASf,IAAAA,UACpBU,EAAQC,EAAQD,QADFlB,MAEpB,QAAIkB,IACFA,EAAMM,QACNd,EAAKE,EAAQJ,EAAWU,GACjBA,OAxDNhB,EAAOuB,MAAO,MAAMC,MAAM,qCAC/B,IAAKxB,EAAOyB,OAAQ,MAAMD,MAAM,qCAChCE,KAAKvB,EAAewB,SAASC,cAAc5B,EAAOuB,OAClDG,KAAKtB,EAAWJ,EAAOyB,OACnBzB,EAAO6B,YAAWH,KAAKxB,EAAcF,EAAO6B,WAChDX,OAAOY,iBAAiB,WAAY,kBAAMtB,EAAKO"}