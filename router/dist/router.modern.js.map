{"version":3,"file":"router.modern.js","sources":["../src/index.js"],"sourcesContent":["/**\n * Helper to trim start/end slash\n * @param {String} path \n */\nconst clearSlashes = path =>\n  path\n    .replace(/\\/$/, '')\n    .replace(/^\\//, '')\n\n/**\n * Helper to get pathname from url\n */\nconst getFragment = () => {\n  let fragment = '';\n  const match = window.location.href.match(/#!(.*)$/)\n  fragment = match ? match[1] : ''\n  return clearSlashes(fragment)\n}\n\nclass Router {\n  \n  __routes = []\n  __preloader = null\n  __parentNode = null\n  __render = null\n  \n  /**\n   * Router instance\n   * @param {{ mount, render, preloader? }} config - Configuration\n   */\n  constructor (config) {\n    if (!config.mount) throw Error('[Router] \"mount\" point is missing')\n    if (!config.render) throw Error('[Router] \"render\" func is missing')\n    this.__parentNode = document.querySelector(config.mount)\n    this.__render = config.render\n    if (config.preloader) this.__preloader = config.preloader\n    window.addEventListener('popstate', () => this.listen());\n  }\n\n  /**\n   * Add route\n   * @param {String} path - URL Path\n   * @param {{ view: Function, state?: Object }} component - Routed component\n   */\n  add = (path, component) => {\n    path = path === '/' ? '^\\/?$' : new RegExp(clearSlashes(path) + '$')\n    this.__routes.push({ path, component })    \n  }\n\n  /**\n   * Render router component\n   * @param {{ view: Function, state?: Object }} component - Routed component\n   * @param {Array} params - URL Params\n   */\n  __mount = (component, params) => {\n    // Extract from routed component\n    const view = () => component(params)\n    \n    // Dynamic / async componoent\n    if (typeof view().then === 'function') {\n      \n      // Render preloader if exists\n      if (this.__preloader) {\n        this.__render(this.__parentNode, this.__preloader)\n      }\n      \n      view().then(resp => {\n        this.__render(this.__parentNode, resp.default)\n      })\n\n    } else {\n\n      this.__render(this.__parentNode, view)\n\n    }\n  }\n\n  /**\n   * Handle mount on route changes\n   */\n  listen = () => {\n    const current = getFragment()\n    this.__routes.some(({ path, component }) => {\n      const match = current.match(path)\n      if (match) {\n        match.shift()\n        this.__mount(component, match)\n        return match;\n      }\n      return false\n    })\n  }\n}\n\nexport default Router\n"],"names":["clearSlashes","path","replace","constructor","config","__routes","__preloader","__parentNode","__render","add","component","RegExp","this","push","__mount","params","view","then","resp","default","listen","current","fragment","match","window","location","href","getFragment","some","shift","mount","Error","render","document","querySelector","preloader","addEventListener"],"mappings":"AAIA,MAAMA,EAAeC,GACnBA,EACGC,QAAQ,MAAO,IACfA,QAAQ,MAAO,mBAYpB,MAWEC,YAAaC,GACX,QAVFC,EAAW,QACXC,EAAc,UACdC,EAAe,UACfC,EAAW,UAoBXC,IAAM,CAACR,EAAMS,KACXT,EAAgB,MAATA,EAAe,OAAU,IAAIU,OAAOX,EAAaC,GAAQ,KAChEW,KAAKP,EAASQ,KAAK,CAAEZ,KAAAA,EAAMS,UAAAA,UAQ7BI,EAAU,CAACJ,EAAWK,KAEpB,MAAMC,EAAO,IAAMN,EAAUK,GAGF,mBAAhBC,IAAOC,MAGZL,KAAKN,GACPM,KAAKJ,EAASI,KAAKL,EAAcK,KAAKN,GAGxCU,IAAOC,KAAKC,IACVN,KAAKJ,EAASI,KAAKL,EAAcW,EAAKC,YAKxCP,KAAKJ,EAASI,KAAKL,EAAcS,SAQrCI,OAAS,KACP,MAAMC,EArEU,MAClB,IAAIC,EAAW,GACf,MAAMC,EAAQC,OAAOC,SAASC,KAAKH,MAAM,WAEzC,OADAD,EAAWC,EAAQA,EAAM,GAAK,GACvBvB,EAAasB,IAiEFK,GAChBf,KAAKP,EAASuB,KAAK,EAAG3B,KAAAA,EAAMS,UAAAA,MAC1B,MAAMa,EAAQF,EAAQE,MAAMtB,GAC5B,QAAIsB,IACFA,EAAMM,QACNjB,KAAKE,EAAQJ,EAAWa,GACjBA,OAxDNnB,EAAO0B,MAAO,MAAMC,MAAM,qCAC/B,IAAK3B,EAAO4B,OAAQ,MAAMD,MAAM,qCAChCnB,KAAKL,EAAe0B,SAASC,cAAc9B,EAAO0B,OAClDlB,KAAKJ,EAAWJ,EAAO4B,OACnB5B,EAAO+B,YAAWvB,KAAKN,EAAcF,EAAO+B,WAChDX,OAAOY,iBAAiB,WAAY,IAAMxB,KAAKQ"}